# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/containerd_installation

# to make linux kernel allows IPV4 packets to be routed between interfaces
- name: Configure Kubernetes Networking
  block:
    - name: Enable IPv4 packet forwarding
      copy:
      dest: /etc/sysctl.d/k8s.conf
      content: |
        net.ipv4.ip_forward = 1

    - name: Enable bridge network traffic
      copy:
      dest: /etc/sysctl.d/k8s.conf
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply sysctl settings
      command: sysctl --system
      become: true


- name: Load required kernel modules for kubernetes
  become: true
  block:
    - name: Load overlay module # this feature lets containers use special storage called OverlayFS to manage files efficiently.  
      command: modprobe overlay
    
    - name: Load br_netfilter module # this feature helps Linux handle network traffic between containers correctly, to facilitate the communication between containers via virtual networks
      command: modprobe br_netfilter
    
    - name: Ensure these modules persist across reboots
      copy:
      dest: /etc/modules-load.d/k8s.conf
      content: |
        overlay
        br_netfilter

- name: Install containerd
  apt:
    name: containerd
    update_cache: true

- name: Configure containerd
  become: true
  block:
    - name: Create the config dir for containerd
      file:
        path: /etc/containerd
        state: directory

    - name: Generate the defaul configuration and update to use systemd cgroups driver
      ansible.builtin.shell: |
        containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' > /etc/containerd/config.toml
      # args:
      #   executable: /bin/bash

- name: Restart containerd service
  become: true
  service:
    name: containerd
    state: restarted

- name: Determine latest version of Kubernetes and store in a shell variable
  block:
    - name: Get latest Kubernetes version string (e.g., v1.30.1)
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        return_content: true
      register: kube_version

    - name: Extract major.minor version from full version 
      set_fact:
        KUBE_LATEST: "{{ kube_version.content | regex_replace('^v(\\d+)\\.(\\d+)\\..*$', '\\1.\\2') }}"